name: Nix
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-20.04, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v18
      - uses: cachix/cachix-action@v12
        with:
          name: numtide
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: |
          export PRJ_ROOT=$PWD
          $(./shell.nix)/entrypoint --pure bash -c "cd devshell && golangci-lint run"
      - run: nix-shell --run "echo OK"
      - run: nix-build
  flakes:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ] # macos-latest is not working right now
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          # Nix Flakes doesn't work on shallow clones
          fetch-depth: 0
      - uses: cachix/install-nix-action@v18
        with:
          install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-3.0pre20201007_5257a25/install
          extra_nix_config: |
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v12
        with:
          name: numtide
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix flake check
      - run: nix develop -c echo OK
      - name: Run nix flake archive
        run: nix flake archive
  docs:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v18
      - uses: cachix/cachix-action@v12
        with:
          name: numtide
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: |
          nix-build -A docs
          cp -r "$(readlink ./result)" book
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: book
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
